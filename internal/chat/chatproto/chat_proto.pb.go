// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: chat_proto.proto

package chatproto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_chat_proto_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *User `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetResult() *User {
	if x != nil {
		return x.Result
	}
	return nil
}

type ContentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomKey string `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Email   string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ContentMessage) Reset() {
	*x = ContentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMessage) ProtoMessage() {}

func (x *ContentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMessage.ProtoReflect.Descriptor instead.
func (*ContentMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_proto_rawDescGZIP(), []int{2}
}

func (x *ContentMessage) GetRoomKey() string {
	if x != nil {
		return x.RoomKey
	}
	return ""
}

func (x *ContentMessage) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ContentMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ContentMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type StreamConnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RoomKey string `protobuf:"bytes,2,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Active  bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *StreamConnect) Reset() {
	*x = StreamConnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamConnect) ProtoMessage() {}

func (x *StreamConnect) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamConnect.ProtoReflect.Descriptor instead.
func (*StreamConnect) Descriptor() ([]byte, []int) {
	return file_chat_proto_proto_rawDescGZIP(), []int{3}
}

func (x *StreamConnect) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamConnect) GetRoomKey() string {
	if x != nil {
		return x.RoomKey
	}
	return ""
}

func (x *StreamConnect) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomKey   string `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	CreatedBy string `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_chat_proto_proto_rawDescGZIP(), []int{4}
}

func (x *Room) GetRoomKey() string {
	if x != nil {
		return x.RoomKey
	}
	return ""
}

func (x *Room) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Room) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type UserRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID      string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	RoomKey   string `protobuf:"bytes,2,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	UserEmail string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
}

func (x *UserRoom) Reset() {
	*x = UserRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoom) ProtoMessage() {}

func (x *UserRoom) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoom.ProtoReflect.Descriptor instead.
func (*UserRoom) Descriptor() ([]byte, []int) {
	return file_chat_proto_proto_rawDescGZIP(), []int{5}
}

func (x *UserRoom) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *UserRoom) GetRoomKey() string {
	if x != nil {
		return x.RoomKey
	}
	return ""
}

func (x *UserRoom) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_chat_proto_proto_rawDescGZIP(), []int{6}
}

var File_chat_proto_proto protoreflect.FileDescriptor

var file_chat_proto_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x63, 0x68, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3b, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6f, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a,
	0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x54, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x58, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xbc,
	0x02, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3c, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x1b, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x10, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x1a, 0x10, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x10, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_proto_rawDescOnce sync.Once
	file_chat_proto_proto_rawDescData = file_chat_proto_proto_rawDesc
)

func file_chat_proto_proto_rawDescGZIP() []byte {
	file_chat_proto_proto_rawDescOnce.Do(func() {
		file_chat_proto_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_proto_rawDescData)
	})
	return file_chat_proto_proto_rawDescData
}

var file_chat_proto_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_chat_proto_proto_goTypes = []interface{}{
	(*User)(nil),             // 0: chatproto.User
	(*RegisterResponse)(nil), // 1: chatproto.RegisterResponse
	(*ContentMessage)(nil),   // 2: chatproto.ContentMessage
	(*StreamConnect)(nil),    // 3: chatproto.StreamConnect
	(*Room)(nil),             // 4: chatproto.Room
	(*UserRoom)(nil),         // 5: chatproto.UserRoom
	(*Empty)(nil),            // 6: chatproto.Empty
}
var file_chat_proto_proto_depIdxs = []int32{
	0, // 0: chatproto.RegisterResponse.result:type_name -> chatproto.User
	0, // 1: chatproto.ChatProto.RegisterUser:input_type -> chatproto.User
	3, // 2: chatproto.ChatProto.CreateStreamMessage:input_type -> chatproto.StreamConnect
	2, // 3: chatproto.ChatProto.SendMessage:input_type -> chatproto.ContentMessage
	4, // 4: chatproto.ChatProto.CreateRoom:input_type -> chatproto.Room
	5, // 5: chatproto.ChatProto.AddUserToRoom:input_type -> chatproto.UserRoom
	1, // 6: chatproto.ChatProto.RegisterUser:output_type -> chatproto.RegisterResponse
	2, // 7: chatproto.ChatProto.CreateStreamMessage:output_type -> chatproto.ContentMessage
	6, // 8: chatproto.ChatProto.SendMessage:output_type -> chatproto.Empty
	6, // 9: chatproto.ChatProto.CreateRoom:output_type -> chatproto.Empty
	6, // 10: chatproto.ChatProto.AddUserToRoom:output_type -> chatproto.Empty
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chat_proto_proto_init() }
func file_chat_proto_proto_init() {
	if File_chat_proto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamConnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_proto_goTypes,
		DependencyIndexes: file_chat_proto_proto_depIdxs,
		MessageInfos:      file_chat_proto_proto_msgTypes,
	}.Build()
	File_chat_proto_proto = out.File
	file_chat_proto_proto_rawDesc = nil
	file_chat_proto_proto_goTypes = nil
	file_chat_proto_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatProtoClient is the client API for ChatProto service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatProtoClient interface {
	RegisterUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*RegisterResponse, error)
	CreateStreamMessage(ctx context.Context, in *StreamConnect, opts ...grpc.CallOption) (ChatProto_CreateStreamMessageClient, error)
	SendMessage(ctx context.Context, in *ContentMessage, opts ...grpc.CallOption) (*Empty, error)
	CreateRoom(ctx context.Context, in *Room, opts ...grpc.CallOption) (*Empty, error)
	AddUserToRoom(ctx context.Context, in *UserRoom, opts ...grpc.CallOption) (*Empty, error)
}

type chatProtoClient struct {
	cc grpc.ClientConnInterface
}

func NewChatProtoClient(cc grpc.ClientConnInterface) ChatProtoClient {
	return &chatProtoClient{cc}
}

func (c *chatProtoClient) RegisterUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/chatproto.ChatProto/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatProtoClient) CreateStreamMessage(ctx context.Context, in *StreamConnect, opts ...grpc.CallOption) (ChatProto_CreateStreamMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatProto_serviceDesc.Streams[0], "/chatproto.ChatProto/CreateStreamMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatProtoCreateStreamMessageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatProto_CreateStreamMessageClient interface {
	Recv() (*ContentMessage, error)
	grpc.ClientStream
}

type chatProtoCreateStreamMessageClient struct {
	grpc.ClientStream
}

func (x *chatProtoCreateStreamMessageClient) Recv() (*ContentMessage, error) {
	m := new(ContentMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatProtoClient) SendMessage(ctx context.Context, in *ContentMessage, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/chatproto.ChatProto/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatProtoClient) CreateRoom(ctx context.Context, in *Room, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/chatproto.ChatProto/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatProtoClient) AddUserToRoom(ctx context.Context, in *UserRoom, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/chatproto.ChatProto/AddUserToRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatProtoServer is the server API for ChatProto service.
type ChatProtoServer interface {
	RegisterUser(context.Context, *User) (*RegisterResponse, error)
	CreateStreamMessage(*StreamConnect, ChatProto_CreateStreamMessageServer) error
	SendMessage(context.Context, *ContentMessage) (*Empty, error)
	CreateRoom(context.Context, *Room) (*Empty, error)
	AddUserToRoom(context.Context, *UserRoom) (*Empty, error)
}

// UnimplementedChatProtoServer can be embedded to have forward compatible implementations.
type UnimplementedChatProtoServer struct {
}

func (*UnimplementedChatProtoServer) RegisterUser(context.Context, *User) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedChatProtoServer) CreateStreamMessage(*StreamConnect, ChatProto_CreateStreamMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateStreamMessage not implemented")
}
func (*UnimplementedChatProtoServer) SendMessage(context.Context, *ContentMessage) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedChatProtoServer) CreateRoom(context.Context, *Room) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedChatProtoServer) AddUserToRoom(context.Context, *UserRoom) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserToRoom not implemented")
}

func RegisterChatProtoServer(s *grpc.Server, srv ChatProtoServer) {
	s.RegisterService(&_ChatProto_serviceDesc, srv)
}

func _ChatProto_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatProtoServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatproto.ChatProto/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatProtoServer).RegisterUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatProto_CreateStreamMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamConnect)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatProtoServer).CreateStreamMessage(m, &chatProtoCreateStreamMessageServer{stream})
}

type ChatProto_CreateStreamMessageServer interface {
	Send(*ContentMessage) error
	grpc.ServerStream
}

type chatProtoCreateStreamMessageServer struct {
	grpc.ServerStream
}

func (x *chatProtoCreateStreamMessageServer) Send(m *ContentMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _ChatProto_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatProtoServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatproto.ChatProto/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatProtoServer).SendMessage(ctx, req.(*ContentMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatProto_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Room)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatProtoServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatproto.ChatProto/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatProtoServer).CreateRoom(ctx, req.(*Room))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatProto_AddUserToRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatProtoServer).AddUserToRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatproto.ChatProto/AddUserToRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatProtoServer).AddUserToRoom(ctx, req.(*UserRoom))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatProto_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatproto.ChatProto",
	HandlerType: (*ChatProtoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _ChatProto_RegisterUser_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _ChatProto_SendMessage_Handler,
		},
		{
			MethodName: "CreateRoom",
			Handler:    _ChatProto_CreateRoom_Handler,
		},
		{
			MethodName: "AddUserToRoom",
			Handler:    _ChatProto_AddUserToRoom_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateStreamMessage",
			Handler:       _ChatProto_CreateStreamMessage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat_proto.proto",
}
